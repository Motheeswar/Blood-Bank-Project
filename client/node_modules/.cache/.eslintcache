[{"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\index.js":"1","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\reportWebVitals.js":"2","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\App.js":"3","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\redux\\store.js":"4","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\HomePage.js":"5","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Donation.js":"6","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Dashboard\\Donar.js":"7","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Dashboard\\Hospitals.js":"8","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Dashboard\\Consumer.js":"9","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Dashboard\\Analytics.js":"10","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Dashboard\\OrganisationPage.js":"11","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\auth\\Login.js":"12","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Admin\\HospitalList.js":"13","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\auth\\Register.js":"14","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Admin\\DonarList.js":"15","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Admin\\OrgList.js":"16","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\Routes\\PublicRoute.js":"17","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\Routes\\ProtectedRoute.js":"18","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\redux\\features\\auth\\authSlice.js":"19","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\services\\API.js":"20","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\Spinner.js":"21","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\modal\\Modal.js":"22","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\Layout\\Header.js":"23","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\Layout\\Layout.js":"24","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\redux\\features\\auth\\authActions.js":"25","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\Form\\Form.js":"26","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\Form\\InputType.js":"27","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\Layout\\Sidebar.js":"28","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\services\\authService.js":"29"},{"size":778,"mtime":1713103321384,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1713103321402,"results":"32","hashOfConfig":"31"},{"size":3173,"mtime":1714407948614,"results":"33","hashOfConfig":"31"},{"size":218,"mtime":1713103321402,"results":"34","hashOfConfig":"31"},{"size":2503,"mtime":1713103321396,"results":"35","hashOfConfig":"31"},{"size":1718,"mtime":1713103321395,"results":"36","hashOfConfig":"31"},{"size":1326,"mtime":1713103321393,"results":"37","hashOfConfig":"31"},{"size":1393,"mtime":1713103321394,"results":"38","hashOfConfig":"31"},{"size":1728,"mtime":1713103321392,"results":"39","hashOfConfig":"31"},{"size":3139,"mtime":1713103321391,"results":"40","hashOfConfig":"31"},{"size":1866,"mtime":1713103321394,"results":"41","hashOfConfig":"31"},{"size":843,"mtime":1714401857067,"results":"42","hashOfConfig":"31"},{"size":2008,"mtime":1713103321389,"results":"43","hashOfConfig":"31"},{"size":868,"mtime":1713103321399,"results":"44","hashOfConfig":"31"},{"size":2030,"mtime":1713103321388,"results":"45","hashOfConfig":"31"},{"size":1996,"mtime":1713103321390,"results":"46","hashOfConfig":"31"},{"size":264,"mtime":1713103321375,"results":"47","hashOfConfig":"31"},{"size":826,"mtime":1713103321374,"results":"48","hashOfConfig":"31"},{"size":1786,"mtime":1713103321401,"results":"49","hashOfConfig":"31"},{"size":309,"mtime":1713103321403,"results":"50","hashOfConfig":"31"},{"size":194,"mtime":1713103321381,"results":"51","hashOfConfig":"31"},{"size":4843,"mtime":1713103321382,"results":"52","hashOfConfig":"31"},{"size":1917,"mtime":1713103321378,"results":"53","hashOfConfig":"31"},{"size":437,"mtime":1713103321379,"results":"54","hashOfConfig":"31"},{"size":2290,"mtime":1713103321400,"results":"55","hashOfConfig":"31"},{"size":7658,"mtime":1714409045773,"results":"56","hashOfConfig":"31"},{"size":517,"mtime":1713103321377,"results":"57","hashOfConfig":"31"},{"size":4012,"mtime":1713103321380,"results":"58","hashOfConfig":"31"},{"size":897,"mtime":1713103321404,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13cro4d",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\index.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\App.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\redux\\store.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\HomePage.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Donation.js",["151"],[],"import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/shared/Layout/Layout\";\r\nimport API from \"../services/API\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Donation = () => {\r\n  const { user } = useSelector((state) => state.auth);\r\n  const [data, setData] = useState([]);\r\n  //find donar records\r\n  const getDonars = async () => {\r\n    try {\r\n      const { data } = await API.post(\"/inventory/get-inventory-hospital\", {\r\n        filters: {\r\n          inventoryType: \"in\",\r\n          donar: user?._id,\r\n        },\r\n      });\r\n      if (data?.success) {\r\n        setData(data?.inventory);\r\n        console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDonars();\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"container mt-4\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Blood Group</th>\r\n              <th scope=\"col\">Inventory TYpe</th>\r\n              <th scope=\"col\">Quantity</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data?.map((record) => (\r\n              <tr key={record._id}>\r\n                <td>{record.bloodGroup}</td>\r\n                <td>{record.inventoryType}</td>\r\n                <td>{record.quantity}</td>\r\n                <td>{record.email}</td>\r\n                <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Donation;\r\n","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Dashboard\\Donar.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Dashboard\\Hospitals.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Dashboard\\Consumer.js",["152"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/shared/Layout/Layout\";\r\nimport moment from \"moment\";\r\nimport API from \"../../services/API\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Consumer = () => {\r\n  const { user } = useSelector((state) => state.auth);\r\n  const [data, setData] = useState([]);\r\n  //find donar records\r\n  const getDonars = async () => {\r\n    try {\r\n      const { data } = await API.post(\"/inventory/get-inventory-hospital\", {\r\n        filters: {\r\n          inventoryType: \"out\",\r\n          hospital: user?._id,\r\n        },\r\n      });\r\n      if (data?.success) {\r\n        setData(data?.inventory);\r\n        console.log(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDonars();\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"container mt-4\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Blood Group</th>\r\n              <th scope=\"col\">Inventory TYpe</th>\r\n              <th scope=\"col\">Quantity</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data?.map((record) => (\r\n              <tr key={record._id}>\r\n                <td>{record.bloodGroup}</td>\r\n                <td>{record.inventoryType}</td>\r\n                <td>{record.quantity}</td>\r\n                <td>{record.email}</td>\r\n                <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Consumer;\r\n","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Dashboard\\Analytics.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Dashboard\\OrganisationPage.js",["153"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"./../../components/shared/Layout/Layout\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport API from \"../../services/API\";\r\n\r\nconst OrganisationPage = () => {\r\n  // get current user\r\n  const { user } = useSelector((state) => state.auth);\r\n  const [data, setData] = useState([]);\r\n  //find org records\r\n  const getOrg = async () => {\r\n    try {\r\n      if (user?.role === \"donar\") {\r\n        const { data } = await API.get(\"/inventory/get-orgnaisation\");\r\n        //   console.log(data);\r\n        if (data?.success) {\r\n          setData(data?.organisations);\r\n        }\r\n      }\r\n      if (user?.role === \"hospital\") {\r\n        const { data } = await API.get(\r\n          \"/inventory/get-orgnaisation-for-hospital\"\r\n        );\r\n        //   console.log(data);\r\n        if (data?.success) {\r\n          setData(data?.organisations);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrg();\r\n  }, [user]);\r\n\r\n  return (\r\n    <Layout>\r\n      <table className=\"table \">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Phone</th>\r\n            <th scope=\"col\">Address</th>\r\n            <th scope=\"col\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data?.map((record) => (\r\n            <tr key={record._id}>\r\n              <td>{record.organisationName}</td>\r\n              <td>{record.email}</td>\r\n              <td>{record.phone}</td>\r\n              <td>{record.address}</td>\r\n              <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrganisationPage;\r\n","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\auth\\Login.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Admin\\HospitalList.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\auth\\Register.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Admin\\DonarList.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\pages\\Admin\\OrgList.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\Routes\\PublicRoute.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\Routes\\ProtectedRoute.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\redux\\features\\auth\\authSlice.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\services\\API.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\Spinner.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\modal\\Modal.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\Layout\\Header.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\Layout\\Layout.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\redux\\features\\auth\\authActions.js",["154"],[],"import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport API from \"../../../services/API\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const userLogin = createAsyncThunk(\r\n  \"auth/login\",\r\n  async ({ role, email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await API.post(\"/auth/login\", { role, email, password });\r\n      //store token\r\n      if (data.success) {\r\n        alert(data.message);\r\n        localStorage.setItem(\"token\", data.token);\r\n        window.location.replace(\"/\");\r\n      }\r\n      return data;\r\n    } catch (error) {\r\n      if (error.response && error.response.data.message) {\r\n        return rejectWithValue(error.response.data.message);\r\n      } else {\r\n        return rejectWithValue(error.message);\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\n//register\r\nexport const userRegister = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (\r\n    {\r\n      name,\r\n      role,\r\n      email,\r\n      password,\r\n      phone,\r\n      organisationName,\r\n      address,\r\n      hospitalName,\r\n      website,\r\n    },\r\n    { rejectWithValue }\r\n  ) => {\r\n    try {\r\n      const { data } = await API.post(\"/auth/register\", {\r\n        name,\r\n        role,\r\n        email,\r\n        password,\r\n        phone,\r\n        organisationName,\r\n        address,\r\n        hospitalName,\r\n        website,\r\n      });\r\n      if (data?.success) {\r\n        alert(\"User Registerd Successfully\");\r\n        window.location.replace(\"/login\");\r\n        // toast.success(\"User Registerd Successfully\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error.response && error.response.data.message) {\r\n        return rejectWithValue(error.response.data.message);\r\n      } else {\r\n        return rejectWithValue(error.message);\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\n//current user\r\nexport const getCurrentUser = createAsyncThunk(\r\n  \"auth/getCurrentUser\",\r\n  async ({ rejectWithValue }) => {\r\n    try {\r\n      const res = await API.get(\"/auth/current-user\");\r\n      if (res.data) {\r\n        return res?.data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error.response && error.response.data.message) {\r\n        return rejectWithValue(error.response.data.message);\r\n      } else {\r\n        return rejectWithValue(error.message);\r\n      }\r\n    }\r\n  }\r\n);\r\n","C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\Form\\Form.js",[],["155"],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\Form\\InputType.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\components\\shared\\Layout\\Sidebar.js",[],[],"C:\\Users\\mothe\\testrun\\Blood-Bank-Mern-Stack-Project\\client\\src\\services\\authService.js",[],[],{"ruleId":"156","severity":1,"message":"157","line":30,"column":6,"nodeType":"158","endLine":30,"endColumn":8,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"157","line":30,"column":6,"nodeType":"158","endLine":30,"endColumn":8,"suggestions":"160"},{"ruleId":"156","severity":1,"message":"161","line":37,"column":6,"nodeType":"158","endLine":37,"endColumn":12,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":97,"column":11,"nodeType":"169","messageId":"170","endLine":197,"endColumn":12,"suppressions":"171"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDonars'. Either include it or remove the dependency array.","ArrayExpression",["172"],["173"],"React Hook useEffect has a missing dependency: 'getOrg'. Either include it or remove the dependency array.",["174"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["175"],{"desc":"176","fix":"177"},{"desc":"176","fix":"178"},{"desc":"179","fix":"180"},{"kind":"181","justification":"182"},"Update the dependencies array to be: [getDonars]",{"range":"183","text":"184"},{"range":"185","text":"184"},"Update the dependencies array to be: [getOrg, user]",{"range":"186","text":"187"},"directive","",[807,809],"[getDonars]",[817,819],[1060,1066],"[getOrg, user]"]